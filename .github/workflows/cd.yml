name: Deploy (Aggregator, Parser, Collector)

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to deploy to'
        required: true
        type: choice
        options:
          - "phoenix"
          - "columbus-v2"
          - "cube"
          - "dimension"
          - "fetchhub"
          - "dorado"
      app_type:
        description: 'App type to deploy'
        required: true
        type: choice
        options:
          - "collector"
          - "parser-dex"
          - "aggregator"
      region:
        description: 'Region to be deployed'
        required: false
        type: choice
        default: "ap-northeast-2"
        options:
          - "ap-northeast-2"
          - "us-west-2"

env:
  # AWS
  ECR_REPOSITORY: cosmwasm-etl
  ECS_CLUSTER: cosmwasm-etl
  TARGET: ${{ format('{0}-cosmwasm-etl-{1}', github.event.inputs.network, github.event.inputs.app_type) }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: build and deploy the app
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: checkout
        uses: actions/checkout@v5

      - name: Check if ref is a tag and extract version
        id: check-tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            GIT_TAG=$(echo "${{ github.ref }}" | sed 's|refs/tags/v||')
            echo "tag=${GIT_TAG}" >> "$GITHUB_OUTPUT"
            echo "run_next_job=true" >> "$GITHUB_OUTPUT"
          else
            echo "This workflow must be triggered by a tag ref (refs/tags/*)."
            echo "run_next_job=false" >> "$GITHUB_OUTPUT"
            exit 1
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        if: ${{ steps.check-tag.outputs.run_next_job == 'true' }}
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: cosmwasm-etl-deploy
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1

      - name: Download Task Definition
        id: download-task-definition
        working-directory: .
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.TARGET }} | jq '.taskDefinition' > ${{ env.TARGET }}.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./${{ env.TARGET }}.json
          container-name: ${{ env.TARGET }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY}}/${{ github.event.inputs.app_type }}:${{ steps.check-tag.outputs.tag }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.TARGET }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
